import datetime

from configparser import ConfigParser
import psycopg2


def bot_token():
    config = ConfigParser()
    config.read('config.ini')
    token = config['bot']['token']
    return token


def config(filename='config.ini', section='database'):
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä –¥–ª—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    parser = ConfigParser()
    # –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
    parser.read(filename)

    # –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ü–∏—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    db_params = {}
    if parser.has_section(section):
        params = parser.items(section)
        for param in params:
            db_params[param[0]] = param[1]
    else:
        raise Exception(f'Section {section} not found in the {filename} file')

    return db_params


def connect():
    conn = None
    try:
        # –ß—Ç–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        params = config()

        print('Connecting to the PostgreSQL database...')
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
        conn = psycopg2.connect(**params)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        return conn
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)


def select_all_lessons():
    """–í—ã–±–æ—Ä –∏–∑ –ë–î –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    :return: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π –≤–∏–¥–∞:
            [(4, '–ë–∏–æ–ª–æ–≥–∏—è', 'üå±'), (5, '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', 'üåç'), (6, '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç', 'üí°')]
    """
    conn = None
    cur = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = connect()
        # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
        cur = conn.cursor()

        # –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã lessons_table
        cur.execute("SELECT * FROM lessons_table")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        rows = cur.fetchall()
        # print(rows)
        # # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω
        # for row in rows:
        #     print(row)
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if cur:
            cur.close()
        if conn:
            conn.close()
            print('Database connection closed.')
        return rows


def select_all_admins():
    """–í—ã–±–æ—Ä –∏–∑ –ë–î –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤
    :return: –°–ø–∏—Å–æ–∫
    """
    conn = None
    cur = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = connect()
        # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
        cur = conn.cursor()

        # –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã lessons_table
        cur.execute("SELECT * FROM admins_table")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        rows = cur.fetchall()
        # print(rows)
        # # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω
        # for row in rows:
        #     print(row)
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if cur:
            cur.close()
        if conn:
            conn.close()
            print('Database connection closed.')
        return rows


def select_all_main_admins():
    """–í—ã–±–æ—Ä –∏–∑ –ë–î –≤—Å–µ—Ö –≥–ª–∞–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
    :return: –°–ø–∏—Å–æ–∫
    """
    conn = None
    cur = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = connect()
        # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
        cur = conn.cursor()

        # –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã lessons_table
        cur.execute("SELECT * FROM admins_table WHERE main_admin=1")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        rows = cur.fetchall()
        # print(rows)
        # # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω
        # for row in rows:
        #     print(row)
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if cur:
            cur.close()
        if conn:
            conn.close()
            print('Database connection closed.')
        return rows


def add_new_admin(user_id, main_admin, phone, nick, full_name):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω
    :return: True/False
    """
    conn = None
    cur = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = connect()
        # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
        cur = conn.cursor()

        sql = "INSERT INTO admins_table (id, main_admin, phone, nick, full_name) VALUES (%s, %s, %s, %s, %s)"
        data = (user_id, main_admin, phone, nick, full_name)

        # –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã lessons_table
        cur.execute(sql, data)
        conn.commit()


    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
        return False
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if cur:
            cur.close()
        if conn:
            conn.close()
            print('Database connection closed.')
        return True


def add_new_homework(date_on, date_off, lessons, homework, author):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
    :return: True/False
    """
    conn = None
    cur = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = connect()
        # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
        cur = conn.cursor()

        sql = "INSERT INTO homework_table (date_on, date_off, lessons, homework, author) VALUES (%s, %s, %s, %s, %s)"
        data = (date_on, date_off, lessons, homework, author)

        # –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã lessons_table
        cur.execute(sql, data)
        conn.commit()


    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
        return False
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if cur:
            cur.close()
        if conn:
            conn.close()
            print('Database connection closed.')
        return True


print(select_all_lessons())